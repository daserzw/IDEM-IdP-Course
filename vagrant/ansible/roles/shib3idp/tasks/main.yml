- name: Stat Shibboleth IdP tarball in /opt 
  stat: path=/opt/shibboleth-identity-provider-3.2.1.tar.gz
  register: shib_tarball

- name: Download Shibboleth IdP
  get_url: url={{ idp_dl_url }} dest=/opt
  when: shib_tarball.stat.exists == False

- name: Stat Shibboleth IdP source dir in /opt 
  stat: path=/opt/shibboleth-identity-provider-3.2.1
  register: shib_dir_source
  when: pre_t is defined and pre_t > 1 
  
- name: Unarchive Shibboleth IdP
  unarchive: src=/opt/shibboleth-identity-provider-3.2.1.tar.gz dest=/opt
  when: shib_dir_source.stat.exists == False and pre_t is defined and pre_t > 1 
  
- name: Cleanup Shibboleth IdP Install
  file: path=/opt/shibboleth-idp state=absent
  when: cleanup is defined
  
- name: Stat Shibboleth IdP dest dir in /opt
  stat: path=/opt/shibboleth-idp
  register: shib_dir_dest

- name: Prepare properties for Shibboleth IdP install
  template: 
    src: roles/shib3idp/templates/shib-install.properties 
    dest: /tmp/shib-install.properties
  when: pre_t is defined and pre_t > 1 

- name: Install Shibboleth Idp
  environment: 
    JAVA_HOME: "{{ java_home }}"
  command: |
    /opt/shibboleth-identity-provider-3.2.1/bin/install.sh \
    -Didp.sealer.password={{ idp_pw }} \
    -Didp.keystore.password={{ idp_pw }} \
    -Didp.scope={{ domain }} \
    -Didp.src.dir=/opt/shibboleth-identity-provider-3.2.1 \
    -Didp.host.name={{ idp_fqdn }} \
    -Didp.target.dir=/opt/shibboleth-idp \
    -Didp.merge.properties=/tmp/shib-install.properties
  when: shib_dir_dest.stat.exists == False and pre_t is defined and pre_t > 1 
  
- name: tomcat7 user for idp dirs
  file: name="{{ item }}" owner=tomcat7 recurse=yes
  with_items:
    - "{{ idp_path }}/conf"
    - "{{ idp_path }}/logs"
    - "{{ idp_path }}/metadata"
    - "{{ idp_path }}/credentials"
  when: pre_t is defined and pre_t > 1 
  
- name: Install the IdP WAR
  template: 
    src: roles/shib3idp/templates/idp.xml 
    dest: /etc/tomcat7/Catalina/localhost/idp.xml
  when: pre_t is defined and pre_t > 1 

- name: Generate salt for persistentId generator
  shell: openssl rand -base64 36
  register: persId_salt
  when: pre_t is defined and pre_t > 1 
  
- name: Configure LDAP Auth
  copy: 
    src: roles/shib3idp/files/ldap.properties 
    dest: "{{ idp_path }}/conf/ldap.properties" 
  when: pre_t is defined and pre_t > 1 
    
- name: Configure Enhanced Logging
  copy: 
    src: roles/shib3idp/files/logback.xml 
    dest: "{{ idp_path }}/conf/logback.xml"
  when: pre_t is defined and pre_t > 1 

- name: Configure saml-nameid.properties (persistentId)
  template: 
    src: roles/shib3idp/templates/saml-nameid.properties 
    dest: "{{ idp_path }}/conf/saml-nameid.properties" 
  when: pre_t is defined and pre_t > 1 

- name: Configure saml-nameid.xml (persistentId)
  copy: 
    src: roles/shib3idp/files/saml-nameid.xml
    dest:  "{{ idp_path }}/saml-nameid.xml"
  when: pre_t is defined and pre_t > 1 

- name: Configure relying-party.xml (persistentId)
  copy:
    src: roles/shib3idp/files/relying-party.xml
    dest:  "{{ idp_path }}/relying-party.xml"
  when: pre_t is defined and pre_t > 1 
  
- name: Add SP sp.example.org Metadata to Shibboleth IdP
  get_url:
    url: https://sp.example.org/Shibboleth.sso/Metadata
    dest: /opt/shibboleth-idp/metadata/sp.example.org-metadata.xml
    validate_certs: no
  when: pre_t is defined and pre_t > 2 

- name: Configure SP Metadata in Shibboleth IdP
  copy:
    src: roles/shib3idp/files/metadata-providers.xml
    dest: /opt/shibboleth-idp/conf/metadata-providers.xml
  when: pre_t is defined and pre_t > 2 
  
- name: Configure IdP attribute-filter.xml 
  copy: 
    src: roles/shib3idp/files/attribute-filter.xml
    dest: "{{ idp_path }}/attribute-filter.xml"
  when: pre_t is defined and pre_t > 2

- name: Configure IdP attribute-resolver-full.xml 
  copy: 
    src: roles/shib3idp/files/attribute-resolver-full.xml
    dest: "{{ idp_path }}/attribute-resolver-full.xml"
  when: pre_t is defined and pre_t > 2 

- name: Add attribute-resolver-full.xml to services.xml
  copy: 
    src: roles/shib3idp/files/services.xml
    dest: "{{ idp_path }}/services.xml"
  when: pre_t is defined and pre_t > 2 

- name: Restart Tomcat7
  service: name=tomcat7 state=restarted
  when: pre_t is defined and pre_t > 2

